/*********************************************************
  hash.cpp
  Written by Bryan Galdrikian
  (c) 1999 MathEngine, inc.
 *********************************************************/

/**********************************************************************************
  This table of 256 MeI32 ints is arbitrary, with the exception that the
  low-order byte of each entry is unique.  It was generated by setting most
  significant 24 bits of each entry with a random number generator, such that
  each bit had an equal probability of being 0 or (MeReal)(1.)  The low-order bytes were
  generated by a shuffle of the numbers 0x00 through 0xFF.
 **********************************************************************************/

extern const MeU32 kgCRCHashTable[256] = {
  0xCAE55753,0xFFAEF4FA,0x3C864455,0x578BE976,0xE98431DE,0x6B7A7CD7,0x96E21FED,0xBB9B427A,
  0x4F13A6EC,0xD980B4E1,0xE2F8E42A,0x11EAD694,0xCAAF1E5E,0x9A02F6FF,0xBF11D53B,0xFAE3A5B6,
  0x98CAF388,0x342C65DD,0x49EC61BE,0xD07DA1BB,0x6386710F,0xC12FA091,0xE2E7870A,0x7A4831DC,
  0x22861BF3,0xB1FD3731,0xEC46D3FB,0xC7C4EA3D,0x27BB4AD8,0xAF53FEAB,0x066F75AA,0x36304FC8,
  0xEC310F45,0x62EAC19B,0x3C058184,0xE3B5C5D1,0xCA98DFD6,0xC36BE111,0x17560569,0xF51805B8,
  0x0A766F9E,0x04FEB9E4,0x5F4BAF25,0xF5FBC835,0xEE53D115,0xD817EBE7,0xB2E6ADF2,0x6C6AEA85,
  0x86AF7381,0xE3D3B147,0x107ED04E,0x30096E86,0xD4D42EEB,0x7249B9B7,0x225594C3,0x6B24937B,
  0xEDB5ACE6,0x103F300B,0xE9BA2F3F,0x75C6366A,0x00EF01A0,0x41FE9AA2,0x56150AB0,0x8FF5D826,
  0xF942CBCF,0x9BA6F974,0x3726A534,0xFD61C0A4,0x460AA549,0x64B54C10,0x831524CE,0x3EE02307,
  0x64B3EAD3,0x689B4D33,0x02234F08,0x7F84ECB1,0x43A43616,0x6373691C,0x6476DE8F,0x7F30D7E5,
  0xDCF0D062,0x6115177D,0xE7D01F44,0xEAFF7DCC,0x4D8DEAF0,0x783793F4,0x9C434606,0xD16CD9A8,
  0x9ED20F24,0x4D9E969A,0xB0EDCB12,0x591DBD37,0xD3450C42,0x0166F8AF,0x50DF3C54,0x43CE3AB3,
  0xCAFC4DF8,0xDABC093E,0xC7462393,0x129C53CA,0xDEFDD7C6,0xC5AA8FF9,0x1F411251,0xC99E8C48,
  0xE6B44539,0xF2B86664,0x86695D2E,0x0588E443,0x90AFE957,0x726B464C,0xD70D8782,0xC0E68E03,
  0x9B6E5D05,0x54CC50F5,0xA9551F3C,0x7D4007CB,0x002229D5,0xC2F5B583,0x2A324CA9,0x9F9522C4,
  0xB3FB1895,0x79F7E88A,0x4FC9CC19,0x3462FFBF,0xBF8E32BC,0x7083E84A,0xC2A8E1DA,0x431C9192,
  0x378E962B,0xD11DB3FE,0xF3F32297,0x0EE6C4EA,0xEB3FFAFC,0x69F9A959,0xBC575B38,0xA2D7EEC5,
  0x15EC06E0,0x56BAD68B,0xF187A17E,0xAE6F5ED0,0xB2E56B1B,0x5BC8895A,0x2A14EFC1,0x7C59CA2D,
  0xC8534DEF,0x209DB4A5,0xA03E4052,0x1F08E467,0x181D2978,0x72340856,0x4012C650,0xCAF47D6C,
  0x08368AE8,0xD7DD185B,0xF1E7262C,0x8A5A1F98,0xADBB4B1D,0xBB2C254D,0xEF3DAA9F,0x53211ABA,
  0x365B09BD,0xCC59F8B4,0xD206F86E,0xF985F732,0xD1BE331F,0x8EC27F40,0x434760DF,0xD5705FF1,
  0x5ABD66E2,0xF44AACA3,0x29CB9D1A,0xCF17477F,0x7C286B1E,0x0E936260,0xA85E259C,0xD2EE909D,
  0xA3B0BA6F,0x6C8BC00C,0x7F52EE29,0xD8173A77,0xB9707966,0x04A1B15F,0x43EAC168,0x83F8BEC9,
  0x9F642780,0xDA6C9F7C,0x21391670,0x00F6A8E3,0x51C7B390,0x0CF71765,0xABA1413A,0xB34C7B09,
  0xD0CB8B41,0x96758521,0xCD885EA7,0x5298EB4B,0x3D2DB2CD,0x46A40087,0x5FE9A8B2,0xD1975275,
  0xD1D23096,0x898B9F30,0xA5D02B00,0x712A228C,0xF2F89F36,0x3A80C7FD,0xA8A3F818,0x41138728,
  0x2D3EB4B5,0x9FC27627,0x53ABA3B9,0xCAEEAF46,0x00313217,0xE1F0E114,0x4405BCA1,0x5B2A2AC7,
  0x174E1604,0xE606652F,0xBBC2FAAD,0x9722F5E9,0x59F11BD9,0x69268DEE,0x46639873,0x9C45F8F7,
  0x5A350C4F,0xFF83948D,0xBBEBCD22,0x7BCE9171,0x99E315D4,0xC8468902,0x24040FA6,0xD1F55223,
  0x3D8E4E5D,0x5CBE86AE,0x0EE51BC2,0x2858E5DB,0x96CC9913,0x5907560D,0x2913B758,0xF8E8105C,
  0x3E839AC0,0xFB4BE201,0x7D3D65AC,0xC260068E,0x9AF198D2,0x653AFC99,0x58D8B989,0x1BAC5879,
  0x71A17561,0x97EFAF6D,0xE3E7F30E,0xED2FB120,0x10DCD76B,0x35B73A72,0x817C5563,0x9FB519F6
};
